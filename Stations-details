import requests
import pandas as pd

# Define the base URL
base_url = "https://tie.digitraffic.fi/api/tms/v1/stations/" 
station_ids = [20010, 20011, 20016, 20017, 20018]

# List to hold the data for all stations
data_list = []

# Loop through each station ID and call the API
for station_id in station_ids:
    url = f"{base_url}{station_id}"
    try:
        response = requests.get(url)
        response.raise_for_status()  # Raise an error for bad status codes
        data = response.json()
        # Add station ID to the data for context
        data['station_id'] = station_id
        data_list.append(data)
    except requests.exceptions.RequestException as e:
        print(f"Failed to get data for Station ID {station_id}: {e}")


# Save data to a CSV file
if data_list:
    df = pd.DataFrame(data_list)
    df.to_csv('stations_data.csv', index=False)
    print("Data saved to 'stations_data.csv'.")
else:
    print("No data available to save.")
import pandas as pd


# Data
data = [
    {'id': 20010, 'tmsNumber': 20010, 'name': 'vt1_Espoo_Turveradantie', 'collectionStatus': 'GATHERING', 
     'state': None, 'dataUpdatedTime': '2023-05-09T08:08:00Z', 'municipality': 'Espoo', 
     'province': 'Uusimaa', 'direction1Municipality': 'Turku', 'direction2Municipality': 'Helsinki', 
     'stationType': 'LML_1', 'freeFlowSpeed1': 95.0, 'freeFlowSpeed2': 95.0},
    
    {'id': 20011, 'tmsNumber': 20011, 'name': 'vt1_Espoo_Sinimäki', 'collectionStatus': 'GATHERING', 
     'state': None, 'dataUpdatedTime': '2023-05-09T08:08:00Z', 'municipality': 'Espoo', 
     'province': 'Uusimaa', 'direction1Municipality': 'Turku', 'direction2Municipality': 'Helsinki', 
     'stationType': 'LML_1', 'freeFlowSpeed1': 95.0, 'freeFlowSpeed2': 95.0},
    
    {'id': 20016, 'tmsNumber': 20016, 'name': 'vt1_Espoo_Säterinmetsä_2_Hki', 'collectionStatus': 'GATHERING', 
     'state': 'OK_FAULT_DOUBT_CANCELLED', 'dataUpdatedTime': '2024-09-16T06:59:05Z', 'municipality': 'Espoo', 
     'province': 'Uusimaa', 'direction1Municipality': 'Turku', 'direction2Municipality': 'Helsinki', 
     'stationType': 'LML_1', 'freeFlowSpeed1': 95.0, 'freeFlowSpeed2': 95.0},
    
    {'id': 20017, 'tmsNumber': 20017, 'name': 'vt1_Espoo_Espoonsilta', 'collectionStatus': 'GATHERING', 
     'state': None, 'dataUpdatedTime': '2023-11-14T06:23:51Z', 'municipality': 'Espoo', 
     'province': 'Uusimaa', 'direction1Municipality': 'Turku', 'direction2Municipality': 'Helsinki', 
     'stationType': 'LML_1', 'freeFlowSpeed1': 95.0, 'freeFlowSpeed2': 95.0},
    
    {'id': 20018, 'tmsNumber': 20018, 'name': 'vt1_Espoo_Ruukinranta', 'collectionStatus': 'GATHERING', 
     'state': 'OK_FAULT_DOUBT_CANCELLED', 'dataUpdatedTime': '2024-03-20T10:50:20Z', 'municipality': 'Espoo', 
     'province': 'Uusimaa', 'direction1Municipality': 'Turku', 'direction2Municipality': 'Helsinki', 
     'stationType': 'LML_1', 'freeFlowSpeed1': 95.0, 'freeFlowSpeed2': 95.0}
]

df = pd.DataFrame(data)
display(df)

# Save to CSV
df.to_csv('station_data.csv', index=False)
print("Data saved to 'station_data.csv'.")
